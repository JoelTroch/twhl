{"version":3,"sources":["autocomplete.js","select2-data-api.js","select2-pagination.js","youtube-embed.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClFA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["(function($) {\r\n    $.fn.autocomplete = function(config) {\r\n\r\n        config = $.extend({\r\n            multiple: false,\r\n            paginated: true,\r\n            count: 10,\r\n            minimumInputLength: 0,\r\n            id: 'id',\r\n            text: 'name',\r\n            clearable: false,\r\n            placeholder: ''\r\n        }, config);\r\n\r\n        var require = $.fn.select2.amd.require;\r\n        var utils = require('select2/utils');\r\n        var results = require('select2/results');\r\n        var pagination = require('select2/pagination');\r\n        var dataApi = require('select2/data-api');\r\n        var resultsAdapter = utils.Decorate(results, pagination);\r\n\r\n        return this.each(function() {\r\n            var $el = $(this);\r\n            $el.select2({\r\n                ajax: {\r\n                    url: config.url,\r\n                    dataType: 'json',\r\n                    delay: 250,\r\n                    data: function (params) {\r\n                        return {\r\n                            filter: params.term,\r\n                            page: params.page,\r\n                            count: config.count\r\n                        };\r\n                    },\r\n                    processResults: function (data, page) {\r\n                        if (config.id != 'id') {\r\n                            for (var i = 0; i < data.items.length; i++) data.items[i].id = data.items[i][config.id];\r\n                        }\r\n                        return {\r\n                            results: data.items,\r\n                            page: data.page,\r\n                            pages: data.pages,\r\n                            total: data.total\r\n                        };\r\n                    },\r\n                    cache: true\r\n                },\r\n                multiple: config.multiple,\r\n                minimumInputLength: config.minimumInputLength,\r\n                placeholder: config.placeholder,\r\n                allowClear: config.clearable,\r\n                templateResult: function(item) {\r\n                    if (item.loading) return item.text\r\n                    return item[config.text] || item.name || item.text || item[config.id];\r\n                },\r\n                templateSelection: function(item) {\r\n                    return item[config.text] || item.name || item.text || item[config.id];\r\n                },\r\n                dataAdapter: dataApi,\r\n                resultsAdapter: config.paginated ? resultsAdapter : null\r\n            });\r\n        });\r\n    };\r\n}(jQuery));","$.fn.select2.amd.define('select2/data-api', [\r\n  'jquery',\r\n  'select2/utils',\r\n  'select2/data/ajax'\r\n], function ($, Utils, AjaxAdapter) {\r\n\r\n    function ApiAdapter ($element, options) {\r\n        this.cache = [];\r\n        ApiAdapter.__super__.constructor.call(this, $element, options);\r\n    }\r\n    Utils.Extend(ApiAdapter, AjaxAdapter);\r\n\r\n    ApiAdapter.prototype.current = function(callback) {\r\n        var ids = [];\r\n        var result = [];\r\n        var self = this;\r\n        this.$element.find(':selected').each(function () {\r\n            var $option = $(this);\r\n            var option = self.item($option);\r\n            var id = parseInt(option.id, 10);\r\n            if (id > 0) {\r\n                if (self.cache[id]) result.push(self.cache[id]);\r\n                else ids.push(id);\r\n            }\r\n        });\r\n\r\n        if (!ids.length) {\r\n            callback(result);\r\n            return;\r\n        }\r\n\r\n        var options = $.extend({ type: 'GET' }, this.ajaxOptions);\r\n        if (typeof options.url === 'function') options.url = options.url({});\r\n        if (typeof options.data === 'function') options.data = options.data({});\r\n\r\n        options.data.id = ids.join(',');\r\n        options.data.all = true;\r\n\r\n        options.transport(options, function (data) {\r\n            var results = self.processResults({items:data}, {});\r\n            for (var i = 0; i < data.length; i++) {\r\n                self.cache[data[i].id] = data[i];\r\n                result.push(data);\r\n            }\r\n            callback(data);\r\n        });\r\n    };\r\n\r\n    ApiAdapter.prototype.query = function (params, callback) {\r\n        var self = this;\r\n        var wrapper = function(data) {\r\n            for (var i = 0; i < data.results.length; i++) {\r\n                self.cache[data.results[i].id] = data.results[i];\r\n            }\r\n            callback.apply(this, arguments);\r\n        };\r\n        ApiAdapter.__super__.query.call(this, params, wrapper);\r\n    };\r\n\r\n    return ApiAdapter;\r\n\r\n});","$.fn.select2.amd.define('select2/pagination', [\r\n  'jquery'\r\n], function ($) {\r\n\r\n\r\n    function Select2Pagination(decorated, $element, options, dataAdapter) {\r\n        this.lastParams = {};\r\n        this.lastResults = {};\r\n        decorated.call(this, $element, options, dataAdapter);\r\n        this.$pagination = this.createPaginationButtons();\r\n        this.loading = false;\r\n    }\r\n\r\n    Select2Pagination.prototype.append = function (decorated, data) {\r\n        this.$pagination.remove();\r\n        this.loading = false;\r\n        this.lastResults = data;\r\n\r\n        decorated.call(this, data);\r\n\r\n        this.updatePagination();\r\n        this.$results.append(this.$pagination);\r\n    };\r\n\r\n    Select2Pagination.prototype.bind = function (decorated, container, $container) {\r\n        var self = this;\r\n\r\n        decorated.call(this, container, $container);\r\n\r\n        container.on('query', function (params) {\r\n            self.lastParams = params;\r\n            self.loading = true;\r\n        });\r\n\r\n        container.on('query:append', function (params) {\r\n            self.lastParams = params;\r\n            self.loading = true;\r\n        });\r\n\r\n        // var self = this;\r\n        this.$results.on('click', '.select2-pagination-prev', function () {\r\n            self.changePage(-1);\r\n        });\r\n        this.$results.on('click', '.select2-pagination-next', function () {\r\n            self.changePage(+1);\r\n        });\r\n    };\r\n\r\n    Select2Pagination.prototype.changePage = function (decorated, offset) {\r\n        if (this.loading) return;\r\n\r\n        this.loading = true;\r\n        var params = $.extend({}, {page: 1}, this.lastParams);\r\n        if (this.lastResults && this.lastResults.page) params.page = this.lastResults.page;\r\n        params.page += offset;\r\n        this.trigger('query', params);\r\n    };\r\n\r\n    Select2Pagination.prototype.formatInformation = function(decorated, parameters) {\r\n        return 'Page ' + parameters.page + ' of ' + parameters.pages;\r\n    };\r\n\r\n    Select2Pagination.prototype.updatePagination = function() {\r\n        this.$pagination.find('.select2-pagination-prev').toggle(this.lastResults.page > 1);\r\n        this.$pagination.find('.select2-pagination-next').toggle(this.lastResults.page < this.lastResults.pages);\r\n        this.$pagination.find('.select2-pagination-info').html(this.formatInformation(this.lastResults));\r\n    };\r\n\r\n    Select2Pagination.prototype.createPaginationButtons = function() {\r\n        var $item = $('<li class=\"select2-results__option select2-pagination\" role=\"treeitem\"></li>'),\r\n            $prev = $('<span class=\"select2-pagination-prev\">&lt;</span>'),\r\n            $next = $('<span class=\"select2-pagination-next\">&gt;</span>'),\r\n            $info = $('<span class=\"select2-pagination-info\"></span>');\r\n        $item.append($prev);\r\n        $item.append($next);\r\n        $item.append($info);\r\n\r\n        return $item;\r\n    };\r\n\r\n    return Select2Pagination;\r\n\r\n});","$(document).on('click', '.video-content .uninitialised', function(event) {\r\n    var $t = $(this),\r\n      ytid = $t.data('youtube-id'),\r\n       url = 'https://www.youtube.com/embed/' + ytid + '?autoplay=1&rel=0',\r\n     frame = $('<iframe></iframe>').attr({ src: url, frameborder: 0, allowfullscreen: ''}).addClass('caption-body');\r\n    $t.replaceWith(frame);\r\n});"],"sourceRoot":"/source/"}